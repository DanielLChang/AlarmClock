{"version":3,"sources":["webpack:///webpack/bootstrap 3a134ad83823ef7180ed","webpack:///./src/alarmapp.js","webpack:///./src/alarmcontroller.js","webpack:///./src/alarmview.js","webpack:///./src/alarm.js","webpack:///./src/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AC3DA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;;;;;;;ACvDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;ACnCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;ACxCA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC","file":"./src/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3a134ad83823ef7180ed","// Alarm App Util Functions\n\nexport default class AlarmApp {\n  constructor() {\n    this.alarmList = [];\n    this.period = 'AM';\n  }\n\n  // Add Alarm to AlarmList\n  addAlarm(alarm) {\n    this.alarmList.push(alarm);\n  }\n\n  // Check if Alarm is not already set\n  isUnique(alarm) {\n    if (this.alarmList.length === 0) return true;\n    const length = this.alarmList.length;\n\n    for (let i = 0; i < length; i++) {\n      const curr = this.alarmList[i];\n      if (curr.hr === alarm.hr\n        && curr.min === alarm.min\n        && curr.period === alarm.period) return false;\n    }\n\n    return true;\n  }\n\n  // Check if any Alarm has been met\n  checkAlarms() {\n    const time = new Date();\n    const length = this.alarmList.length;\n\n    for (let i = 0; i < length; i++) {\n      const alarm = this.alarmList[i];\n      if (alarm.matches(time)) {\n        return i;\n      }\n    }\n    \n    return -1;\n  }\n\n  // Simple alert message\n  alertAlarm(alarm) {\n    alert(`It is now ${alarm.toString()}`);\n  }\n\n  // Remove specific Alarm from AlarmList\n  removeAlarm(idx) {\n    const beforeIdx = this.alarmList.slice(0, idx);\n    const afterIdx = this.alarmList.slice(idx + 1);\n\n    if (idx === 0) {\n      this.alarmList = afterIdx;\n    } else {\n      this.alarmList = beforeIdx.concat(afterIdx);\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alarmapp.js\n// module id = 0\n// module chunks = 0","// Controller for listeners\nimport Alarm from './alarm.js';\n\nexport default class AlarmController {\n  constructor(alarmApp, alarmView) {\n    this.alarmApp = alarmApp;\n    this.alarmView = alarmView;\n  }\n\n  // Listener to select period AM/PM\n  addPeriodBtnListener(el) {\n    el.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.alarmView.selectPeriodBtn(e.target);\n      this.alarmApp.period = e.target.value;\n    });\n  }\n\n  // Listener to add Alarm\n  submitAlarmFormListener(el) {\n    el.addEventListener('submit', (e) => {\n      e.preventDefault();\n      const hr = parseInt(e.target.alarmHr.value);\n      const min = parseInt(e.target.alarmMin.value);\n      const period = this.alarmApp.period;\n      const newAlarm = new Alarm(hr, min, period);\n\n      // Only add if is valid time and not already existed\n      if (newAlarm.isValid()) {\n        if (this.alarmApp.isUnique(newAlarm)) {\n          this.alarmApp.addAlarm(newAlarm);\n          this.alarmView.displayAlarms(this.alarmApp.alarmList);\n        } else {\n          alert('Alarm already exists');\n        }\n      } else {\n        alert('Invalid input');\n      }\n    });\n  }\n\n  // Listener on one second interval to check if Alarm has been met\n  // If met, alert and remove\n  checkAlarmListener() {\n    setInterval(() => {\n      const idx = this.alarmApp.checkAlarms();\n\n      if (idx >= 0) {\n        const alarm = this.alarmApp.alarmList[idx];\n        this.alarmApp.alertAlarm(alarm);\n        this.alarmApp.removeAlarm(idx)\n        this.alarmView.displayAlarms(this.alarmApp.alarmList);\n      }\n    }, 1000);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alarmcontroller.js\n// module id = 1\n// module chunks = 0","// Alarm View Effects\n\nexport default class AlarmView {\n  constructor(activePeriodBtn, alarmList) {\n    this.activePeriodBtn = activePeriodBtn;\n    this.alarmList = alarmList;\n  }\n\n  // Add active period class on selected element\n  // and remove from unselected\n  selectPeriodBtn(el) {\n    this.activePeriodBtn.classList.remove('active-period');\n    el.classList.add('active-period');\n    this.activePeriodBtn = el;\n  }\n\n  // Display alarms set\n  displayAlarms(alarms) {\n    // Reset display\n    this.alarmList.innerText = '';\n    if (alarms.length === 0) return this.createAlarmEl('No Alarms');\n\n    for (let i = 0; i < alarms.length; i++) {\n      const alarm = alarms[i];\n      this.createAlarmEl(alarm.toString());\n    }\n  }\n\n  // Create Alarm Element\n  createAlarmEl(text) {\n    const alarmEl = document.createElement('div');\n    alarmEl.classList.add('alarm-el');\n    alarmEl.innerText = text;\n    this.alarmList.appendChild(alarmEl);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alarmview.js\n// module id = 2\n// module chunks = 0","// Alarm Functions\n\nexport default class Alarm {\n  constructor(hr, min, period) {\n    this.hr = hr;\n    this.min = min;\n    this.period = period;\n    this.time = new Date();\n\n    // Set Alarm time to 24 Hour Format\n    if (hr === 12 && period === 'AM') {\n      this.time.setHours(0);\n    } else if (hr === 12 && period === 'PM') {\n      this.time.setHours(12);\n    } else if (period === 'PM') {\n      this.time.setHours(hr + 12);\n    } else {\n      this.time.setHours(hr);\n    }\n    this.time.setMinutes(min);\n    this.time.setSeconds(0);\n  }\n\n  // Check if alarms match\n  matches(timeToCheck) {\n    return this.time.getHours() === timeToCheck.getHours()\n      && this.time.getMinutes() === timeToCheck.getMinutes()\n      && this.time.getSeconds() === timeToCheck.getSeconds()\n  }\n\n  // Check if alarm is valid input\n  isValid() {\n    return this.hr > 0 && this.hr < 13\n      && this.min > -1 && this.min < 60\n  }\n\n  // Convert to US string format\n  toString() {\n    return this.time.toLocaleTimeString('en-US');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alarm.js\n// module id = 3\n// module chunks = 0","// Main file to set up alarm clock app\nimport AlarmApp from './alarmapp.js';\nimport AlarmView from './alarmview.js';\nimport AlarmController from './alarmcontroller.js';\n\n// Current Time\nconst clock = () => {\n  const time = new Date();\n  \n  document.getElementById('clock').innerText =\n    time.toLocaleTimeString('en-US');\n  setTimeout(clock, 1000);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Run clock on one second interval\n  clock();\n\n  // Grab DOM elements\n  const alarmForm = document.getElementById('alarm-form');\n  const activePeriodBtn = document.getElementById('am-btn');\n  const periodBtns = document.getElementById('alarm-period-btns');\n  const alarmList = document.getElementById('alarm-list');\n\n  // Initialize Components\n  const app = new AlarmApp();\n  const view = new AlarmView(activePeriodBtn, alarmList);\n  const controller = new AlarmController(app, view);\n\n  // Add Listeners\n  controller.addPeriodBtnListener(periodBtns);\n  controller.submitAlarmFormListener(alarmForm);\n  controller.checkAlarmListener();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}